<?xml version="1.0" encoding="UTF-8"?>
<WebLink xmlns="http://soap.sforce.com/2006/04/metadata">
    <fullName>Goto_Booking_list_button</fullName>
    <availability>online</availability>
    <displayType>massActionButton</displayType>
    <linkType>javascript</linkType>
    <masterLabel>Goto Booking</masterLabel>
    <openType>onClickJavaScript</openType>
    <protected>false</protected>
    <requireRowSelection>true</requireRowSelection>
    <url>{!REQUIRESCRIPT(&quot;/soap/ajax/39.0/connection.js&quot;)} 
{!REQUIRESCRIPT(&quot;/soap/ajax/39.0/apex.js&quot;)} 
 
 
var Ids = {!GetRecordIDs($ObjectType.Booking__c)}; 
 
var IdsLength = Ids.length; 
 
if(IdsLength == 0) { 
alert(&quot;Error:\n\nYou must choose at least one record.&quot;); 
} 
else if(IdsLength &gt; 1) { 
alert(&quot;Error:\n\nSelect only one booking record.&quot;); 
} 
else{


var result = sforce.connection.query(&quot;Select b.id,b.Source_System__c,b.Account_No__c,b.Booking_Number__c,b.Sales_Order__r.Id,b.Sales_Order__r.Calc_External_id__c,b.Sales_Order__r.Booking_Division__c,b.Sales_Order__r.Status__c,b.Sales_Order__r.Contact__c,b.Sales_Order__r.Creative_Contact_Name__c,b.Sales_Order__r.Creative_Contact_Phone__c,b.Sales_Order__r.Placer_Contact_Name__c,b.Sales_Order__r.Placer_Contact_Phone__c,b.CyberAd_Classification__c,b.CyberAd_Division__c,b.CreatedDate From Booking__c b where id =\&#39;&quot; + Ids[0] + &quot;\&#39;&quot;);

records = result.getArray(&quot;records&quot;);

var b = records[0];


gotoBooking(b.Source_System__c,b.Id,b.Sales_Order__r.Id,b.Sales_Order__r.Calc_External_id__c,b.Account_No__c,b.Booking_Number__c,b.Sales_Order__r.Creative_Contact_Name__c,b.Sales_Order__r.Creative_Contact_Phone__c,b.Sales_Order__r.Placer_Contact_Name__c,b.Sales_Order__r.Placer_Contact_Phone__c,b.CyberAd_Classification__c,b.CyberAd_Division__c,b.CreatedDate);


}


function gotoBooking(inSourceSystem, inBookingId, inSalesOrderId, inSalesOrderCalcId, inBookingAccountNo, inBookingNumber, inCreativeContact, inCreativeContactPhone, inPlacerContactName, inPlacerContactPhone, inClassification, inDivision, inCreatedDate)
{
    
    var classification = inClassification;
    var division = inDivision;

    var isInTransition = false;

    //check for transition from cyberAd to cyberSell
    if(inSourceSystem == &#39;CyberAd&#39;) {
        var transitionConfiguration = sforce.connection.query(&quot;SELECT Id FROM Booking_System_Migration_Configuration__c WHERE Classification__c = \&#39;&quot; + classification + &quot;\&#39; AND Division__c =  \&#39;&quot; + division + &quot;\&#39;&quot;);
        if (transitionConfiguration.size &gt; 0) {
            isInTransition = true;
        }
    }

    if(inSourceSystem == &#39;CyberAd&#39; &amp;&amp; !isInTransition) {
        var RequestBroker = new ActiveXObject(&#39;SalesForceRequestBroker.RequestBroker&#39;); 
        var r = RequestBroker.LaunchCyberAd(&#39;{!GETSESSIONID()}&#39;);
        var Result = RequestBroker.ExecuteRequest(&#39;{!GETSESSIONID()}&#39;, inSalesOrderId + &#39;-&#39; + inBookingId , &#39;{\&quot;salesOrderSFID\&quot;:\&quot;&#39; + inSalesOrderId + &#39;\&quot;, \&quot;bookingSFID\&quot;:\&quot;&#39; + inBookingId + &#39;\&quot;}&#39;);
    }

    else if(inSourceSystem == &#39;Cyber$ell&#39; || (inSourceSystem == &#39;CyberAd&#39; &amp;&amp; isInTransition)) {

        var wshShell;
        var cyberOpen;
        var cyberVersion;
        var bpStatus;
        var salesOrderId;
        var baNum;
        var bookingNum;
        var cyber;
        var conName;
        var homeNum;
        var placerName;
        var placerNumber;
        var salesRep;
        var intgId;
        var bookingProfileId;

        try {

            wshShell = new ActiveXObject(&quot;WScript.Shell&quot;);

            cyberVersion = &quot;CyberSell v6&quot;;

            cyberOpen = wshShell.AppActivate(cyberVersion);


            if (cyberOpen) {

                bpStatus = &quot;Pending&quot;;
                        
                cyber = new ActiveXObject(&quot;CyberSell.Application&quot;);

                cyber = cyber.WrappedApplication;
                salesOrderId = inSalesOrderCalcId;

                    // Get all values
                baNum = inBookingAccountNo==null ? &quot;&quot; : inBookingAccountNo;
                bookingNum = inBookingNumber==null ? &quot;&quot; : inBookingNumber;
                conName = inCreativeContact==null ? &quot;&quot; : inCreativeContact;
                homeNum = inCreativeContactPhone==null ? &quot;&quot; : inCreativeContactPhone;
                placerName = inPlacerContactName==null ? &quot;&quot; : inPlacerContactName;
                placerNumber = inPlacerContactPhone==null ? &quot;&quot; : inPlacerContactPhone;

                if (conName.replace(/^\s+|\s+$/g, &#39;&#39;) == &quot;&quot;) {
	                conName = placerName;
	                homeNum = placerNumber;
            	}

                salesRep = &quot;Genera&quot;;
                intgId = inSalesOrderCalcId;

                //different search function for cyberAd bookings in cyberSell
                if (inSourceSystem == &#39;CyberAd&#39;) {

                    //start formatting createDate field
                    var dateString = inCreatedDate;
                    dateString = dateString.split(&#39;T&#39;);

                    var createDate = dateString[0].split(&#39;-&#39;);
                    var createTime = dateString[1].split(&#39;:&#39;);
                    
                    //year, month, day, hours, minutes, seconds, milliseconds
                    var d = new Date(createDate[0], createDate[1], createDate[2], &#39;0&#39;, createTime[1], createTime[2].slice(0,2), &#39;0&#39;);
                    //handle UTC offset
                    d.setUTCDate(createDate[2]);
                    d.setUTCHours(createTime[0]);

                    var monthString;
                    var month = d.getMonth();
                    if (month) {
                        switch(month) {
                            case 1: monthString = &#39;jan&#39;;break;
                            case 2: monthString = &#39;feb&#39;;break;
                            case 3: monthString = &#39;mar&#39;;break;
                            case 4: monthString = &#39;apr&#39;;break;
                            case 5: monthString = &#39;may&#39;;break;
                            case 6: monthString = &#39;jun&#39;;break;
                            case 7: monthString = &#39;jul&#39;;break;
                            case 8: monthString = &#39;aug&#39;;break;
                            case 9: monthString = &#39;sep&#39;;break;
                            case 10: monthString = &#39;oct&#39;;break;
                            case 11: monthString = &#39;nov&#39;;break;
                            case 12: monthString = &#39;dec&#39;;break;
                            default: break;
                        }
                    }

                    var dateString = &quot;00&quot; + d.getDate();
                    dateString = dateString.slice(-2);

                    createDate = dateString + monthString + d.getFullYear().toString().slice(2);

                    //Open existing booking
                    var searchString =  division + bookingNum + &quot;_&quot; + createDate;
                    cyber.Execute(&quot;LocateBooking&quot;, &quot;[ExternalBookingNumber] = &#39;&quot; + searchString + &quot;&#39;&quot;);
                }
                //Open existing booking
                else if ((baNum != &quot;&quot;) &amp;&amp; (bookingNum != &quot;&quot;)) { //Then Locate a GBA and Locate a booking.
                    cyber.Execute(&quot;LocateAccount&quot;, &quot;[Number] = &#39;&quot; + baNum + &quot;&#39;&quot;);
                    if (cyber.Results.Accounts.Count == 1) {
                        //Next 2 lines are meant to select the Customers tab and select the first item.
                        cyber.Results.CurrentTab = 0;
                        cyber.Results.ListIndex = 1;
                        cyber.Execute(&quot;LocateBooking&quot;, &quot;[Number] = &#39;&quot; + bookingNum + &quot;&#39;&quot;);

      if (cyber.Results.GeneralBookings.Count == 1) {

        if ((cyber.CurrentForm != null) &amp;&amp; (cyber.CurrentForm.Booking != null)) { 
          var pb = cyber.CurrentForm.Booking.PropertyBag; 
          pb.add(&quot;SFSessionId&quot;, &quot;{!$Api.Session_ID}&quot;); 
        }
      } 
                    }
                }
                else { //Then raise an error.
                    alert(&quot;This Sales Order has invalid Booking&quot;);
                }

                cyber.UpdateGUI();
            }
            else if (inSourceSystem == &#39;CyberAd&#39;) {
                alert(&quot;This division and pillar has transitioned to Cyber$ell. Unable to go to Cyber$ell. Please ensure that Cyber$ell is fully opened then try again.&quot;);
            }
            else {
                alert(&quot;Unable to go to Cyber$ell. Please ensure that Cyber$ell is fully opened then try again.&quot;);
            }
        } catch (e) {
            // Write the generic error message to screen
            alert(e.toString() + &#39;\n&#39; + cyber + &#39;\n&#39; + e.errText + &#39;\n&#39; + e.errCode);
        } finally {
            wshShell = null;
            cyber = null;
        }
    }

    else if(inSourceSystem == &#39;AdPoint&#39;) {
       if (typeof(srcSelf) == &#39;function&#39;) {
          srcSelf(&#39;/apex/AdPointOrderDetailView?id=&#39; + inBookingId + &#39;&amp;s=false&#39;);
       }
       else {
          window.location.href = &#39;/apex/AdPointOrderDetailView?id=&#39; + inBookingId + &#39;&amp;s=true&#39;;
       }
    }

    else if(inSourceSystem == &#39;Leapfrog&#39; || inSourceSystem == &#39;NewsAdds Booking System&#39;) {
       if (typeof(srcSelf) == &#39;function&#39;) {
          srcSelf(&#39;/apex/LeapfrogBooking?id=&#39; + inBookingId + &#39;&amp;s=false&#39;);
       }
       else {
          window.location.href = &#39;/apex/LeapfrogBooking?id=&#39; + inBookingId + &#39;&amp;s=true&#39;;
       }
    }

    else {
        alert(&#39;Unknown booking system in source system field on the booking record&#39;);
    }
}</url>
</WebLink>
